git is a version control system.
git is free software.
git is a distributed version control system.
git is free soft ware.

学习 git
第一节
  现在总结一下今天学的两点内容：
  初始化一个Git仓库，使用git init命令。
  添加文件到Git仓库，分两步：
  使用命令git add <file>，注意，可反复多次使用，添加多个文件；
  使用命令git commit -m <message>，完成。
第二节
  要随时掌握工作区的状态，使用git status命令。
  如果git status告诉你有文件被修改过，用git diff <filename>可以查看修改内容。
第三节
  现在总结一下：
  HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset   --hard commit_id。
    穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本，可以用git log --        pretty=oneline简要查看。
    要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。
第四节
    git init初始化的文件夹是工作区，git init所创建的文件.git 是版本库，版本库中有stage 暂存区    ，和第一个分支master，所对应的命令是git add，和git commit
第五节
    git 跟踪和管理的是修改，而不是文件
第六节
    场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout     -- file。
    场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，    第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
    场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前    提  是没有推送到远程库
第七节
     ssh-keygen -t rsa -C "youremail@example.com"创建SSH Key，创建在c:/users/David 下的.ssh
    在github 的设置中设置ssh 将 id_rsa.pub公钥密码文件内容复制进去
第八节
    要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git
    关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
    此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；
第九节
    要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。
    Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。
第十节
    查看分支：git branch
    创建分支：git branch <name>
    切换分支：git checkout <name>
    创建+切换分支：git checkout -b <name>
    合并某分支到当前分支：git merge <name>
    删除分支：git branch -d <name>